# source: https://us1.prisma.sh/mark-hernandez-074398/rpjournal/dev
# timestamp: Tue Mar 05 2019 12:27:12 GMT-0600 (Central Standard Time)

type Adventure implements Node {
  id: ID!
  title: String!
  description: String!
  owner: User!
  sessions(
    where: SessionWhereInput
    orderBy: SessionOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Session!]
  quests(
    where: QuestWhereInput
    orderBy: QuestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Quest!]
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
A connection to a list of items.
"""
type AdventureConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [AdventureEdge]!
  aggregate: AggregateAdventure!
}

input AdventureCreateInput {
  title: String!
  description: String!
  owner: UserCreateOneWithoutAdventuresInput!
  sessions: SessionCreateManyWithoutAdventureInput
  quests: QuestCreateManyWithoutAdventureInput
}

input AdventureCreateManyWithoutOwnerInput {
  create: [AdventureCreateWithoutOwnerInput!]
  connect: [AdventureWhereUniqueInput!]
}

input AdventureCreateOneWithoutQuestsInput {
  create: AdventureCreateWithoutQuestsInput
  connect: AdventureWhereUniqueInput
}

input AdventureCreateOneWithoutSessionsInput {
  create: AdventureCreateWithoutSessionsInput
  connect: AdventureWhereUniqueInput
}

input AdventureCreateWithoutOwnerInput {
  title: String!
  description: String!
  sessions: SessionCreateManyWithoutAdventureInput
  quests: QuestCreateManyWithoutAdventureInput
}

input AdventureCreateWithoutQuestsInput {
  title: String!
  description: String!
  owner: UserCreateOneWithoutAdventuresInput!
  sessions: SessionCreateManyWithoutAdventureInput
}

input AdventureCreateWithoutSessionsInput {
  title: String!
  description: String!
  owner: UserCreateOneWithoutAdventuresInput!
  quests: QuestCreateManyWithoutAdventureInput
}

"""
An edge in a connection.
"""
type AdventureEdge {
  """
  The item at the end of the edge.
  """
  node: Adventure!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AdventureOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AdventurePreviousValues {
  id: ID!
  title: String!
  description: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input AdventureScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdventureScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AdventureScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AdventureScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
}

type AdventureSubscriptionPayload {
  mutation: MutationType!
  node: Adventure
  updatedFields: [String!]
  previousValues: AdventurePreviousValues
}

input AdventureSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdventureSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AdventureSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AdventureSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdventureWhereInput
}

input AdventureUpdateInput {
  title: String
  description: String
  owner: UserUpdateOneRequiredWithoutAdventuresInput
  sessions: SessionUpdateManyWithoutAdventureInput
  quests: QuestUpdateManyWithoutAdventureInput
}

input AdventureUpdateManyDataInput {
  title: String
  description: String
}

input AdventureUpdateManyMutationInput {
  title: String
  description: String
}

input AdventureUpdateManyWithoutOwnerInput {
  create: [AdventureCreateWithoutOwnerInput!]
  connect: [AdventureWhereUniqueInput!]
  set: [AdventureWhereUniqueInput!]
  disconnect: [AdventureWhereUniqueInput!]
  delete: [AdventureWhereUniqueInput!]
  update: [AdventureUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [AdventureUpdateManyWithWhereNestedInput!]
  deleteMany: [AdventureScalarWhereInput!]
  upsert: [AdventureUpsertWithWhereUniqueWithoutOwnerInput!]
}

input AdventureUpdateManyWithWhereNestedInput {
  where: AdventureScalarWhereInput!
  data: AdventureUpdateManyDataInput!
}

input AdventureUpdateOneRequiredWithoutQuestsInput {
  create: AdventureCreateWithoutQuestsInput
  connect: AdventureWhereUniqueInput
  update: AdventureUpdateWithoutQuestsDataInput
  upsert: AdventureUpsertWithoutQuestsInput
}

input AdventureUpdateOneRequiredWithoutSessionsInput {
  create: AdventureCreateWithoutSessionsInput
  connect: AdventureWhereUniqueInput
  update: AdventureUpdateWithoutSessionsDataInput
  upsert: AdventureUpsertWithoutSessionsInput
}

input AdventureUpdateWithoutOwnerDataInput {
  title: String
  description: String
  sessions: SessionUpdateManyWithoutAdventureInput
  quests: QuestUpdateManyWithoutAdventureInput
}

input AdventureUpdateWithoutQuestsDataInput {
  title: String
  description: String
  owner: UserUpdateOneRequiredWithoutAdventuresInput
  sessions: SessionUpdateManyWithoutAdventureInput
}

input AdventureUpdateWithoutSessionsDataInput {
  title: String
  description: String
  owner: UserUpdateOneRequiredWithoutAdventuresInput
  quests: QuestUpdateManyWithoutAdventureInput
}

input AdventureUpdateWithWhereUniqueWithoutOwnerInput {
  where: AdventureWhereUniqueInput!
  data: AdventureUpdateWithoutOwnerDataInput!
}

input AdventureUpsertWithoutQuestsInput {
  update: AdventureUpdateWithoutQuestsDataInput!
  create: AdventureCreateWithoutQuestsInput!
}

input AdventureUpsertWithoutSessionsInput {
  update: AdventureUpdateWithoutSessionsDataInput!
  create: AdventureCreateWithoutSessionsInput!
}

input AdventureUpsertWithWhereUniqueWithoutOwnerInput {
  where: AdventureWhereUniqueInput!
  update: AdventureUpdateWithoutOwnerDataInput!
  create: AdventureCreateWithoutOwnerInput!
}

input AdventureWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdventureWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AdventureWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AdventureWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  owner: UserWhereInput
  sessions_every: SessionWhereInput
  sessions_some: SessionWhereInput
  sessions_none: SessionWhereInput
  quests_every: QuestWhereInput
  quests_some: QuestWhereInput
  quests_none: QuestWhereInput
}

input AdventureWhereUniqueInput {
  id: ID
}

type AggregateAdventure {
  count: Int!
}

type AggregateQuest {
  count: Int!
}

type AggregateSession {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createAdventure(data: AdventureCreateInput!): Adventure!
  createSession(data: SessionCreateInput!): Session!
  createQuest(data: QuestCreateInput!): Quest!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateAdventure(
    data: AdventureUpdateInput!
    where: AdventureWhereUniqueInput!
  ): Adventure
  updateSession(
    data: SessionUpdateInput!
    where: SessionWhereUniqueInput!
  ): Session
  updateQuest(data: QuestUpdateInput!, where: QuestWhereUniqueInput!): Quest
  deleteUser(where: UserWhereUniqueInput!): User
  deleteAdventure(where: AdventureWhereUniqueInput!): Adventure
  deleteSession(where: SessionWhereUniqueInput!): Session
  deleteQuest(where: QuestWhereUniqueInput!): Quest
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  upsertAdventure(
    where: AdventureWhereUniqueInput!
    create: AdventureCreateInput!
    update: AdventureUpdateInput!
  ): Adventure!
  upsertSession(
    where: SessionWhereUniqueInput!
    create: SessionCreateInput!
    update: SessionUpdateInput!
  ): Session!
  upsertQuest(
    where: QuestWhereUniqueInput!
    create: QuestCreateInput!
    update: QuestUpdateInput!
  ): Quest!
  updateManyUsers(
    data: UserUpdateManyMutationInput!
    where: UserWhereInput
  ): BatchPayload!
  updateManyAdventures(
    data: AdventureUpdateManyMutationInput!
    where: AdventureWhereInput
  ): BatchPayload!
  updateManySessions(
    data: SessionUpdateManyMutationInput!
    where: SessionWhereInput
  ): BatchPayload!
  updateManyQuests(
    data: QuestUpdateManyMutationInput!
    where: QuestWhereInput
  ): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyAdventures(where: AdventureWhereInput): BatchPayload!
  deleteManySessions(where: SessionWhereInput): BatchPayload!
  deleteManyQuests(where: QuestWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  adventures(
    where: AdventureWhereInput
    orderBy: AdventureOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Adventure]!
  sessions(
    where: SessionWhereInput
    orderBy: SessionOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Session]!
  quests(
    where: QuestWhereInput
    orderBy: QuestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Quest]!
  user(where: UserWhereUniqueInput!): User
  adventure(where: AdventureWhereUniqueInput!): Adventure
  session(where: SessionWhereUniqueInput!): Session
  quest(where: QuestWhereUniqueInput!): Quest
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!
  adventuresConnection(
    where: AdventureWhereInput
    orderBy: AdventureOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): AdventureConnection!
  sessionsConnection(
    where: SessionWhereInput
    orderBy: SessionOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): SessionConnection!
  questsConnection(
    where: QuestWhereInput
    orderBy: QuestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): QuestConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

type Quest implements Node {
  id: ID!
  title: String!
  description: String!
  completed: Boolean!
  adventure: Adventure!
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
A connection to a list of items.
"""
type QuestConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [QuestEdge]!
  aggregate: AggregateQuest!
}

input QuestCreateInput {
  title: String!
  description: String!
  completed: Boolean
  adventure: AdventureCreateOneWithoutQuestsInput!
}

input QuestCreateManyWithoutAdventureInput {
  create: [QuestCreateWithoutAdventureInput!]
  connect: [QuestWhereUniqueInput!]
}

input QuestCreateWithoutAdventureInput {
  title: String!
  description: String!
  completed: Boolean
}

"""
An edge in a connection.
"""
type QuestEdge {
  """
  The item at the end of the edge.
  """
  node: Quest!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum QuestOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  completed_ASC
  completed_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type QuestPreviousValues {
  id: ID!
  title: String!
  description: String!
  completed: Boolean!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input QuestScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [QuestScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [QuestScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [QuestScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  completed: Boolean

  """
  All values that are not equal to given value.
  """
  completed_not: Boolean
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
}

type QuestSubscriptionPayload {
  mutation: MutationType!
  node: Quest
  updatedFields: [String!]
  previousValues: QuestPreviousValues
}

input QuestSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [QuestSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [QuestSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [QuestSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: QuestWhereInput
}

input QuestUpdateInput {
  title: String
  description: String
  completed: Boolean
  adventure: AdventureUpdateOneRequiredWithoutQuestsInput
}

input QuestUpdateManyDataInput {
  title: String
  description: String
  completed: Boolean
}

input QuestUpdateManyMutationInput {
  title: String
  description: String
  completed: Boolean
}

input QuestUpdateManyWithoutAdventureInput {
  create: [QuestCreateWithoutAdventureInput!]
  connect: [QuestWhereUniqueInput!]
  set: [QuestWhereUniqueInput!]
  disconnect: [QuestWhereUniqueInput!]
  delete: [QuestWhereUniqueInput!]
  update: [QuestUpdateWithWhereUniqueWithoutAdventureInput!]
  updateMany: [QuestUpdateManyWithWhereNestedInput!]
  deleteMany: [QuestScalarWhereInput!]
  upsert: [QuestUpsertWithWhereUniqueWithoutAdventureInput!]
}

input QuestUpdateManyWithWhereNestedInput {
  where: QuestScalarWhereInput!
  data: QuestUpdateManyDataInput!
}

input QuestUpdateWithoutAdventureDataInput {
  title: String
  description: String
  completed: Boolean
}

input QuestUpdateWithWhereUniqueWithoutAdventureInput {
  where: QuestWhereUniqueInput!
  data: QuestUpdateWithoutAdventureDataInput!
}

input QuestUpsertWithWhereUniqueWithoutAdventureInput {
  where: QuestWhereUniqueInput!
  update: QuestUpdateWithoutAdventureDataInput!
  create: QuestCreateWithoutAdventureInput!
}

input QuestWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [QuestWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [QuestWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [QuestWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  completed: Boolean

  """
  All values that are not equal to given value.
  """
  completed_not: Boolean
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  adventure: AdventureWhereInput
}

input QuestWhereUniqueInput {
  id: ID
}

type Session implements Node {
  id: ID!
  title: String!
  description: String!
  adventure: Adventure!
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
A connection to a list of items.
"""
type SessionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [SessionEdge]!
  aggregate: AggregateSession!
}

input SessionCreateInput {
  title: String!
  description: String!
  adventure: AdventureCreateOneWithoutSessionsInput!
}

input SessionCreateManyWithoutAdventureInput {
  create: [SessionCreateWithoutAdventureInput!]
  connect: [SessionWhereUniqueInput!]
}

input SessionCreateWithoutAdventureInput {
  title: String!
  description: String!
}

"""
An edge in a connection.
"""
type SessionEdge {
  """
  The item at the end of the edge.
  """
  node: Session!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum SessionOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SessionPreviousValues {
  id: ID!
  title: String!
  description: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input SessionScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SessionScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SessionScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SessionScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
}

type SessionSubscriptionPayload {
  mutation: MutationType!
  node: Session
  updatedFields: [String!]
  previousValues: SessionPreviousValues
}

input SessionSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SessionSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SessionSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SessionSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SessionWhereInput
}

input SessionUpdateInput {
  title: String
  description: String
  adventure: AdventureUpdateOneRequiredWithoutSessionsInput
}

input SessionUpdateManyDataInput {
  title: String
  description: String
}

input SessionUpdateManyMutationInput {
  title: String
  description: String
}

input SessionUpdateManyWithoutAdventureInput {
  create: [SessionCreateWithoutAdventureInput!]
  connect: [SessionWhereUniqueInput!]
  set: [SessionWhereUniqueInput!]
  disconnect: [SessionWhereUniqueInput!]
  delete: [SessionWhereUniqueInput!]
  update: [SessionUpdateWithWhereUniqueWithoutAdventureInput!]
  updateMany: [SessionUpdateManyWithWhereNestedInput!]
  deleteMany: [SessionScalarWhereInput!]
  upsert: [SessionUpsertWithWhereUniqueWithoutAdventureInput!]
}

input SessionUpdateManyWithWhereNestedInput {
  where: SessionScalarWhereInput!
  data: SessionUpdateManyDataInput!
}

input SessionUpdateWithoutAdventureDataInput {
  title: String
  description: String
}

input SessionUpdateWithWhereUniqueWithoutAdventureInput {
  where: SessionWhereUniqueInput!
  data: SessionUpdateWithoutAdventureDataInput!
}

input SessionUpsertWithWhereUniqueWithoutAdventureInput {
  where: SessionWhereUniqueInput!
  update: SessionUpdateWithoutAdventureDataInput!
  create: SessionCreateWithoutAdventureInput!
}

input SessionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SessionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SessionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SessionWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  adventure: AdventureWhereInput
}

input SessionWhereUniqueInput {
  id: ID
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  adventure(
    where: AdventureSubscriptionWhereInput
  ): AdventureSubscriptionPayload
  session(where: SessionSubscriptionWhereInput): SessionSubscriptionPayload
  quest(where: QuestSubscriptionWhereInput): QuestSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  adventures(
    where: AdventureWhereInput
    orderBy: AdventureOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Adventure!]
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  adventures: AdventureCreateManyWithoutOwnerInput
}

input UserCreateOneWithoutAdventuresInput {
  create: UserCreateWithoutAdventuresInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutAdventuresInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  adventures: AdventureUpdateManyWithoutOwnerInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredWithoutAdventuresInput {
  create: UserCreateWithoutAdventuresInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAdventuresDataInput
  upsert: UserUpsertWithoutAdventuresInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutAdventuresDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpsertWithoutAdventuresInput {
  update: UserUpdateWithoutAdventuresDataInput!
  create: UserCreateWithoutAdventuresInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String

  """
  All values that are not equal to given value.
  """
  password_not: String

  """
  All values that are contained in given list.
  """
  password_in: [String!]

  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]

  """
  All values less than the given value.
  """
  password_lt: String

  """
  All values less than or equal the given value.
  """
  password_lte: String

  """
  All values greater than the given value.
  """
  password_gt: String

  """
  All values greater than or equal the given value.
  """
  password_gte: String

  """
  All values containing the given string.
  """
  password_contains: String

  """
  All values not containing the given string.
  """
  password_not_contains: String

  """
  All values starting with the given string.
  """
  password_starts_with: String

  """
  All values not starting with the given string.
  """
  password_not_starts_with: String

  """
  All values ending with the given string.
  """
  password_ends_with: String

  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  resetToken: String

  """
  All values that are not equal to given value.
  """
  resetToken_not: String

  """
  All values that are contained in given list.
  """
  resetToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  resetToken_not_in: [String!]

  """
  All values less than the given value.
  """
  resetToken_lt: String

  """
  All values less than or equal the given value.
  """
  resetToken_lte: String

  """
  All values greater than the given value.
  """
  resetToken_gt: String

  """
  All values greater than or equal the given value.
  """
  resetToken_gte: String

  """
  All values containing the given string.
  """
  resetToken_contains: String

  """
  All values not containing the given string.
  """
  resetToken_not_contains: String

  """
  All values starting with the given string.
  """
  resetToken_starts_with: String

  """
  All values not starting with the given string.
  """
  resetToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  resetToken_ends_with: String

  """
  All values not ending with the given string.
  """
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """
  All values that are not equal to given value.
  """
  resetTokenExpiry_not: Float

  """
  All values that are contained in given list.
  """
  resetTokenExpiry_in: [Float!]

  """
  All values that are not contained in given list.
  """
  resetTokenExpiry_not_in: [Float!]

  """
  All values less than the given value.
  """
  resetTokenExpiry_lt: Float

  """
  All values less than or equal the given value.
  """
  resetTokenExpiry_lte: Float

  """
  All values greater than the given value.
  """
  resetTokenExpiry_gt: Float

  """
  All values greater than or equal the given value.
  """
  resetTokenExpiry_gte: Float
  adventures_every: AdventureWhereInput
  adventures_some: AdventureWhereInput
  adventures_none: AdventureWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
